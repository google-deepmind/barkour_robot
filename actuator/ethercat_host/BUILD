# EtherCAT host-side implementation.

package(
    default_visibility = ["//visibility:private"],
)

cc_library(
    name = "etherlab",
    srcs = glob(
        [
            "etherlab/lib/*.h",
            "etherlab/lib/*.c",
        ],
    ) + [
        "etherlab/config.h",  # Autogenerated.
        "etherlab/globals.h",
        "etherlab/master/globals.h",
        "etherlab/master/ioctl.h",
    ],
    hdrs = [
        "etherlab/include/ecrt.h",
    ],
    copts = ["-Iethercat_host/etherlab"],
    alwayslink = True,
    linkstatic = False,
)

cc_library(
    name = "etherlab_ethercat_host",
    srcs = ["etherlab_ethercat_host.cc"],
    hdrs = ["etherlab_ethercat_host.h"],
    deps = [
        ":canopen",
        ":constants",
        ":ethercat_host",
        ":etherlab_device_data",
        ":types",
        "@com_google_absl//absl/cleanup",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
        ":etherlab",
    ],
)

cc_test(
    name = "etherlab_ethercat_host_test",
    srcs = ["etherlab_ethercat_host_test.cc"],
    deps = [
        ":etherlab_ethercat_host",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "etherlab_device_data",
    srcs = ["etherlab_device_data.cc"],
    hdrs = ["etherlab_device_data.h"],
    deps = [
        ":canopen",
        ":custom_objects",
        ":ds301_objects",
        ":ds402_objects",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
        ":etherlab",
    ],
)

cc_library(
    name = "custom_objects",
    hdrs = ["custom_objects.h"],
    deps = [":canopen"],
)

cc_test(
    name = "etherlab_device_data_test",
    srcs = ["etherlab_device_data_test.cc"],
    deps = [
        ":canopen",
        ":custom_objects",
        ":ds402_objects",
        ":etherlab_device_data",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "fake_ethercat_host",
    srcs = ["fake_ethercat_host.cc"],
    hdrs = ["fake_ethercat_host.h"],
    deps = [
        ":canopen",
        ":constants",
        ":custom_objects",
        ":ds301_objects",
        ":ds402_objects",
        ":ethercat_host",
        ":types",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
    ],
)

cc_test(
    name = "fake_ethercat_host_test",
    srcs = ["fake_ethercat_host_test.cc"],
    deps = [
        ":canopen",
        ":constants",
        ":ds301_objects",
        ":ds402_objects",
        ":ethercat_host",
        ":fake_ethercat_host",
        ":types",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "canopen",
    srcs = ["canopen.cc"],
    hdrs = ["canopen.h"],
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "canopen_test",
    srcs = ["canopen_test.cc"],
    deps = [
        ":canopen",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "ds402_state",
    srcs = ["ds402_state.cc"],
    hdrs = ["ds402_state.h"],
    deps = [
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "ds402_state_test",
    srcs = ["ds402_state_test.cc"],
    deps = [
        ":ds402_state",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "ds301_objects",
    hdrs = ["ds301_objects.h"],
    deps = [":canopen"],
)

cc_test(
    name = "ds301_objects_test",
    srcs = ["ds301_objects_test.cc"],
    deps = [
        ":canopen",
        ":ds301_objects",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "ds402_objects",
    hdrs = ["ds402_objects.h"],
    deps = [":canopen"],
)

cc_test(
    name = "ds402_objects_test",
    srcs = ["ds402_objects_test.cc"],
    deps = [
        ":canopen",
        ":ds402_objects",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "types",
    srcs = ["types.cc"],
    hdrs = ["types.h"],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "types_test",
    srcs = ["types_test.cc"],
    deps = [
        ":types",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "ethercat_host",
    srcs = ["ethercat_host.cc"],
    hdrs = ["ethercat_host.h"],
    deps = [
        ":canopen",
        ":types",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
    ],
)

cc_test(
    name = "ethercat_host_test",
    srcs = ["ethercat_host_test.cc"],
    deps = [
        ":canopen",
        ":ethercat_host",
        ":types",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_library(
    name = "constants",
    hdrs = ["constants.h"],
)

cc_binary(
    name = "ethercat_example",
    srcs = ["ethercat_example.cc"],
    deps = [
        ":canopen",
        ":custom_objects",
        ":ds301_objects",
        ":ds402_objects",
        ":ds402_state",
        ":ethercat_host",
        ":etherlab_ethercat_host",
        ":fake_ethercat_host",
        ":types",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:flags",
        "@com_google_absl//absl/log:initialize",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:span",
    ],
    # If you'd like to link the binary dynamically, you can do so by adding
    # linkstatic = False,
)
